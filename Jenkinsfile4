@Library('deployment') _
properties([
     pipelineTriggers([pollSCM('H */4 * * 1-5')]),
     disableConcurrentBuilds()
])
node{
     def archiveArtifactConfig;

      stage('Git Repository'){
          checkout scm
       }
       stage('Set up configuration parameters to be used by the pipeline){
            deploymentConfig=readJSON(file:"src/main/resources/deploymentConfig.json")
            archiveArtifactConfig=deploymentConfig.archiveArtifact
            emailConfig=deploymentConfig.email
       }
        env.NODEJS_HOME = "${tool 'nodeJS10'}"
        env.PATH="${env.NODEJS_HOME}/bin:${env.PATH}"

       stage('Package and Build the application'){
            sh "npm install"
            sh 'npm install -g @angular/cli'
            sh 'ng build --prod  --output-path=dist/angularAppNodeInstall/fr/ --index=src/fr/index.html --deploy-url=./'
            sh 'ng build --prod  --output-path=dist/angularAppNodeInstall/en/ --index=src/en/index.html --deploy-url=./'
       }
 /*    stage('Publish to NPM Repository')
       {
           sh "npm publish --registry http://localhost:4873"
       }*/
       stage('Deploy package to Docker')
       {
            def imageName = "smkm001/angularang:${env.BUILD_ID}"
            def dockerFileDir = './'
            def customImage=docker.build("${imageName}","${dockerFileDir}")
            customImage.push()
            sh "docker rmi ${imageName}"
       }
       stage('Email Client')
       {
            deployment.sendEmail(emailConfig)
       }
      
}
